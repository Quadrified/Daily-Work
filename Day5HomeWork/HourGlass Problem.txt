https://www.hackerrank.com/challenges/30-2d-arrays/problem

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    public static int hSum(int[][] arr,int i,int j){
        int sum=arr[i-1][j-1]+arr[i-1][j]+arr[i-1][j+1]+arr[i][j]+arr[i+1][j-1]+arr[i+1][j]+arr[i+1][j+1];
        return sum;
    }

    public static int maxSum(int[][] arr){
        int largest=hSum(arr,1,1);
        for(int i=1;i<5;i++){
            for(int j=1;j<5;j++){
                // System.out.println(hSum(arr,i,j));
                if(hSum(arr,i,j)>largest){
                    largest=hSum(arr,i,j);
                }
            }
        }
        return largest;
    }



    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int[][] arr = new int[6][6];

        for (int i = 0; i < 6; i++) {
            String[] arrRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 6; j++) {
                int arrItem = Integer.parseInt(arrRowItems[j]);
                arr[i][j] = arrItem;
            }
        }

        int largest=maxSum(arr);

        System.out.println(largest);


        scanner.close();
    }
}
